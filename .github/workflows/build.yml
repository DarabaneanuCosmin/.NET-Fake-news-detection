name: Build
on:
  push:
    branches:
      - main
      - Back-end
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: bash
        run: |
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          
      - name: Sonarscanner for dotnet
        uses: Secbyte/dotnet-sonarscanner@v2.3
        with:
          buildCommand: dotnet build .
          testCommand: dotnet test .
          projectKey: a-project-key
          projectName: a-project-name
          sonarOrganisation: an-org
          beginArguments: >
              /d:sonar.verbose="true"
              /d:sonar.cs.opencover.reportsPaths='"/path/to/coverage.xml","/path/to/coverage.2.xml"'
              /d:sonar.coverage.exclusions='"**/*.cs","**/*.md"'
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: bash
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"DarabaneanuCosmin_.NET-Fake-news-detection" /o:"darabaneanucosmin" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
